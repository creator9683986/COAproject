// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: promo.proto

#include "promo.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace promo {
PROTOBUF_CONSTEXPR PromoCode::PromoCode(
    ::_pbi::ConstantInitialized)
  : title_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , code_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , created_at_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , updated_at_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , id_(int64_t{0})
  , creator_id_(int64_t{0})
  , discount_(0){}
struct PromoCodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PromoCodeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PromoCodeDefaultTypeInternal() {}
  union {
    PromoCode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PromoCodeDefaultTypeInternal _PromoCode_default_instance_;
PROTOBUF_CONSTEXPR CreatePromoCodeRequest::CreatePromoCodeRequest(
    ::_pbi::ConstantInitialized)
  : token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , title_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , code_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , discount_(0){}
struct CreatePromoCodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreatePromoCodeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreatePromoCodeRequestDefaultTypeInternal() {}
  union {
    CreatePromoCodeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreatePromoCodeRequestDefaultTypeInternal _CreatePromoCodeRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdatePromoCodeRequest::UpdatePromoCodeRequest(
    ::_pbi::ConstantInitialized)
  : token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , title_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , description_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , code_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , promo_id_(int64_t{0})
  , discount_(0){}
struct UpdatePromoCodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdatePromoCodeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdatePromoCodeRequestDefaultTypeInternal() {}
  union {
    UpdatePromoCodeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdatePromoCodeRequestDefaultTypeInternal _UpdatePromoCodeRequest_default_instance_;
PROTOBUF_CONSTEXPR DeletePromoCodeRequest::DeletePromoCodeRequest(
    ::_pbi::ConstantInitialized)
  : token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , promo_id_(int64_t{0}){}
struct DeletePromoCodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeletePromoCodeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeletePromoCodeRequestDefaultTypeInternal() {}
  union {
    DeletePromoCodeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeletePromoCodeRequestDefaultTypeInternal _DeletePromoCodeRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPromoCodeRequest::GetPromoCodeRequest(
    ::_pbi::ConstantInitialized)
  : token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , promo_id_(int64_t{0}){}
struct GetPromoCodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPromoCodeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPromoCodeRequestDefaultTypeInternal() {}
  union {
    GetPromoCodeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPromoCodeRequestDefaultTypeInternal _GetPromoCodeRequest_default_instance_;
PROTOBUF_CONSTEXPR ListPromoCodesRequest::ListPromoCodesRequest(
    ::_pbi::ConstantInitialized)
  : token_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{})
  , page_(0)
  , page_size_(0){}
struct ListPromoCodesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListPromoCodesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListPromoCodesRequestDefaultTypeInternal() {}
  union {
    ListPromoCodesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListPromoCodesRequestDefaultTypeInternal _ListPromoCodesRequest_default_instance_;
PROTOBUF_CONSTEXPR ListPromoCodesResponse::ListPromoCodesResponse(
    ::_pbi::ConstantInitialized)
  : promo_codes_()
  , total_count_(0)
  , page_(0)
  , page_size_(0){}
struct ListPromoCodesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListPromoCodesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListPromoCodesResponseDefaultTypeInternal() {}
  union {
    ListPromoCodesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListPromoCodesResponseDefaultTypeInternal _ListPromoCodesResponse_default_instance_;
}  // namespace promo
static ::_pb::Metadata file_level_metadata_promo_2eproto[7];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_promo_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_promo_2eproto = nullptr;

const uint32_t TableStruct_promo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::promo::PromoCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::promo::PromoCode, id_),
  PROTOBUF_FIELD_OFFSET(::promo::PromoCode, title_),
  PROTOBUF_FIELD_OFFSET(::promo::PromoCode, description_),
  PROTOBUF_FIELD_OFFSET(::promo::PromoCode, creator_id_),
  PROTOBUF_FIELD_OFFSET(::promo::PromoCode, discount_),
  PROTOBUF_FIELD_OFFSET(::promo::PromoCode, code_),
  PROTOBUF_FIELD_OFFSET(::promo::PromoCode, created_at_),
  PROTOBUF_FIELD_OFFSET(::promo::PromoCode, updated_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::promo::CreatePromoCodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::promo::CreatePromoCodeRequest, token_),
  PROTOBUF_FIELD_OFFSET(::promo::CreatePromoCodeRequest, title_),
  PROTOBUF_FIELD_OFFSET(::promo::CreatePromoCodeRequest, description_),
  PROTOBUF_FIELD_OFFSET(::promo::CreatePromoCodeRequest, discount_),
  PROTOBUF_FIELD_OFFSET(::promo::CreatePromoCodeRequest, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::promo::UpdatePromoCodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::promo::UpdatePromoCodeRequest, token_),
  PROTOBUF_FIELD_OFFSET(::promo::UpdatePromoCodeRequest, promo_id_),
  PROTOBUF_FIELD_OFFSET(::promo::UpdatePromoCodeRequest, title_),
  PROTOBUF_FIELD_OFFSET(::promo::UpdatePromoCodeRequest, description_),
  PROTOBUF_FIELD_OFFSET(::promo::UpdatePromoCodeRequest, discount_),
  PROTOBUF_FIELD_OFFSET(::promo::UpdatePromoCodeRequest, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::promo::DeletePromoCodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::promo::DeletePromoCodeRequest, token_),
  PROTOBUF_FIELD_OFFSET(::promo::DeletePromoCodeRequest, promo_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::promo::GetPromoCodeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::promo::GetPromoCodeRequest, token_),
  PROTOBUF_FIELD_OFFSET(::promo::GetPromoCodeRequest, promo_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::promo::ListPromoCodesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::promo::ListPromoCodesRequest, token_),
  PROTOBUF_FIELD_OFFSET(::promo::ListPromoCodesRequest, page_),
  PROTOBUF_FIELD_OFFSET(::promo::ListPromoCodesRequest, page_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::promo::ListPromoCodesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::promo::ListPromoCodesResponse, promo_codes_),
  PROTOBUF_FIELD_OFFSET(::promo::ListPromoCodesResponse, total_count_),
  PROTOBUF_FIELD_OFFSET(::promo::ListPromoCodesResponse, page_),
  PROTOBUF_FIELD_OFFSET(::promo::ListPromoCodesResponse, page_size_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::promo::PromoCode)},
  { 14, -1, -1, sizeof(::promo::CreatePromoCodeRequest)},
  { 25, -1, -1, sizeof(::promo::UpdatePromoCodeRequest)},
  { 37, -1, -1, sizeof(::promo::DeletePromoCodeRequest)},
  { 45, -1, -1, sizeof(::promo::GetPromoCodeRequest)},
  { 53, -1, -1, sizeof(::promo::ListPromoCodesRequest)},
  { 62, -1, -1, sizeof(::promo::ListPromoCodesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::promo::_PromoCode_default_instance_._instance,
  &::promo::_CreatePromoCodeRequest_default_instance_._instance,
  &::promo::_UpdatePromoCodeRequest_default_instance_._instance,
  &::promo::_DeletePromoCodeRequest_default_instance_._instance,
  &::promo::_GetPromoCodeRequest_default_instance_._instance,
  &::promo::_ListPromoCodesRequest_default_instance_._instance,
  &::promo::_ListPromoCodesResponse_default_instance_._instance,
};

const char descriptor_table_protodef_promo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013promo.proto\022\005promo\"\227\001\n\tPromoCode\022\n\n\002id"
  "\030\001 \001(\003\022\r\n\005title\030\002 \001(\t\022\023\n\013description\030\003 \001"
  "(\t\022\022\n\ncreator_id\030\004 \001(\003\022\020\n\010discount\030\005 \001(\001"
  "\022\014\n\004code\030\006 \001(\t\022\022\n\ncreated_at\030\007 \001(\t\022\022\n\nup"
  "dated_at\030\010 \001(\t\"k\n\026CreatePromoCodeRequest"
  "\022\r\n\005token\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\023\n\013descri"
  "ption\030\003 \001(\t\022\020\n\010discount\030\004 \001(\001\022\014\n\004code\030\005 "
  "\001(\t\"}\n\026UpdatePromoCodeRequest\022\r\n\005token\030\001"
  " \001(\t\022\020\n\010promo_id\030\002 \001(\003\022\r\n\005title\030\003 \001(\t\022\023\n"
  "\013description\030\004 \001(\t\022\020\n\010discount\030\005 \001(\001\022\014\n\004"
  "code\030\006 \001(\t\"9\n\026DeletePromoCodeRequest\022\r\n\005"
  "token\030\001 \001(\t\022\020\n\010promo_id\030\002 \001(\003\"6\n\023GetProm"
  "oCodeRequest\022\r\n\005token\030\001 \001(\t\022\020\n\010promo_id\030"
  "\002 \001(\003\"G\n\025ListPromoCodesRequest\022\r\n\005token\030"
  "\001 \001(\t\022\014\n\004page\030\002 \001(\005\022\021\n\tpage_size\030\003 \001(\005\"u"
  "\n\026ListPromoCodesResponse\022%\n\013promo_codes\030"
  "\001 \003(\0132\020.promo.PromoCode\022\023\n\013total_count\030\002"
  " \001(\005\022\014\n\004page\030\003 \001(\005\022\021\n\tpage_size\030\004 \001(\0052\353\002"
  "\n\014PromoService\022B\n\017CreatePromoCode\022\035.prom"
  "o.CreatePromoCodeRequest\032\020.promo.PromoCo"
  "de\022B\n\017UpdatePromoCode\022\035.promo.UpdateProm"
  "oCodeRequest\032\020.promo.PromoCode\022B\n\017Delete"
  "PromoCode\022\035.promo.DeletePromoCodeRequest"
  "\032\020.promo.PromoCode\022@\n\020GetPromoCodeById\022\032"
  ".promo.GetPromoCodeRequest\032\020.promo.Promo"
  "Code\022M\n\016ListPromoCodes\022\034.promo.ListPromo"
  "CodesRequest\032\035.promo.ListPromoCodesRespo"
  "nseb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_promo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_promo_2eproto = {
    false, false, 1091, descriptor_table_protodef_promo_2eproto,
    "promo.proto",
    &descriptor_table_promo_2eproto_once, nullptr, 0, 7,
    schemas, file_default_instances, TableStruct_promo_2eproto::offsets,
    file_level_metadata_promo_2eproto, file_level_enum_descriptors_promo_2eproto,
    file_level_service_descriptors_promo_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_promo_2eproto_getter() {
  return &descriptor_table_promo_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_promo_2eproto(&descriptor_table_promo_2eproto);
namespace promo {

// ===================================================================

class PromoCode::_Internal {
 public:
};

PromoCode::PromoCode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:promo.PromoCode)
}
PromoCode::PromoCode(const PromoCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    title_.Set(from._internal_title(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    code_.Set(from._internal_code(), 
      GetArenaForAllocation());
  }
  created_at_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    created_at_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_created_at().empty()) {
    created_at_.Set(from._internal_created_at(), 
      GetArenaForAllocation());
  }
  updated_at_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    updated_at_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_updated_at().empty()) {
    updated_at_.Set(from._internal_updated_at(), 
      GetArenaForAllocation());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&discount_) -
    reinterpret_cast<char*>(&id_)) + sizeof(discount_));
  // @@protoc_insertion_point(copy_constructor:promo.PromoCode)
}

inline void PromoCode::SharedCtor() {
title_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  title_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
code_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  code_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
created_at_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  created_at_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
updated_at_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  updated_at_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&discount_) -
    reinterpret_cast<char*>(&id_)) + sizeof(discount_));
}

PromoCode::~PromoCode() {
  // @@protoc_insertion_point(destructor:promo.PromoCode)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PromoCode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  title_.Destroy();
  description_.Destroy();
  code_.Destroy();
  created_at_.Destroy();
  updated_at_.Destroy();
}

void PromoCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PromoCode::Clear() {
// @@protoc_insertion_point(message_clear_start:promo.PromoCode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmpty();
  description_.ClearToEmpty();
  code_.ClearToEmpty();
  created_at_.ClearToEmpty();
  updated_at_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&discount_) -
      reinterpret_cast<char*>(&id_)) + sizeof(discount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PromoCode::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.PromoCode.title"));
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.PromoCode.description"));
        } else
          goto handle_unusual;
        continue;
      // int64 creator_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          creator_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double discount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          discount_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string code = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.PromoCode.code"));
        } else
          goto handle_unusual;
        continue;
      // string created_at = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_created_at();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.PromoCode.created_at"));
        } else
          goto handle_unusual;
        continue;
      // string updated_at = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_updated_at();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.PromoCode.updated_at"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PromoCode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:promo.PromoCode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.PromoCode.title");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_title(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.PromoCode.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // int64 creator_id = 4;
  if (this->_internal_creator_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_creator_id(), target);
  }

  // double discount = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_discount = this->_internal_discount();
  uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(5, this->_internal_discount(), target);
  }

  // string code = 6;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.PromoCode.code");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_code(), target);
  }

  // string created_at = 7;
  if (!this->_internal_created_at().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_created_at().data(), static_cast<int>(this->_internal_created_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.PromoCode.created_at");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_created_at(), target);
  }

  // string updated_at = 8;
  if (!this->_internal_updated_at().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_updated_at().data(), static_cast<int>(this->_internal_updated_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.PromoCode.updated_at");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_updated_at(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:promo.PromoCode)
  return target;
}

size_t PromoCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:promo.PromoCode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string code = 6;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // string created_at = 7;
  if (!this->_internal_created_at().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_created_at());
  }

  // string updated_at = 8;
  if (!this->_internal_updated_at().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_updated_at());
  }

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // int64 creator_id = 4;
  if (this->_internal_creator_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_creator_id());
  }

  // double discount = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_discount = this->_internal_discount();
  uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PromoCode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PromoCode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PromoCode::GetClassData() const { return &_class_data_; }

void PromoCode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PromoCode *>(to)->MergeFrom(
      static_cast<const PromoCode &>(from));
}


void PromoCode::MergeFrom(const PromoCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:promo.PromoCode)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_code().empty()) {
    _internal_set_code(from._internal_code());
  }
  if (!from._internal_created_at().empty()) {
    _internal_set_created_at(from._internal_created_at());
  }
  if (!from._internal_updated_at().empty()) {
    _internal_set_updated_at(from._internal_updated_at());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_creator_id() != 0) {
    _internal_set_creator_id(from._internal_creator_id());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_discount = from._internal_discount();
  uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    _internal_set_discount(from._internal_discount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PromoCode::CopyFrom(const PromoCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:promo.PromoCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PromoCode::IsInitialized() const {
  return true;
}

void PromoCode::InternalSwap(PromoCode* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &title_, lhs_arena,
      &other->title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &code_, lhs_arena,
      &other->code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &created_at_, lhs_arena,
      &other->created_at_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &updated_at_, lhs_arena,
      &other->updated_at_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PromoCode, discount_)
      + sizeof(PromoCode::discount_)
      - PROTOBUF_FIELD_OFFSET(PromoCode, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PromoCode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_promo_2eproto_getter, &descriptor_table_promo_2eproto_once,
      file_level_metadata_promo_2eproto[0]);
}

// ===================================================================

class CreatePromoCodeRequest::_Internal {
 public:
};

CreatePromoCodeRequest::CreatePromoCodeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:promo.CreatePromoCodeRequest)
}
CreatePromoCodeRequest::CreatePromoCodeRequest(const CreatePromoCodeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(from._internal_token(), 
      GetArenaForAllocation());
  }
  title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    title_.Set(from._internal_title(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    code_.Set(from._internal_code(), 
      GetArenaForAllocation());
  }
  discount_ = from.discount_;
  // @@protoc_insertion_point(copy_constructor:promo.CreatePromoCodeRequest)
}

inline void CreatePromoCodeRequest::SharedCtor() {
token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
title_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  title_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
code_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  code_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
discount_ = 0;
}

CreatePromoCodeRequest::~CreatePromoCodeRequest() {
  // @@protoc_insertion_point(destructor:promo.CreatePromoCodeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreatePromoCodeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_.Destroy();
  title_.Destroy();
  description_.Destroy();
  code_.Destroy();
}

void CreatePromoCodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreatePromoCodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:promo.CreatePromoCodeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty();
  title_.ClearToEmpty();
  description_.ClearToEmpty();
  code_.ClearToEmpty();
  discount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePromoCodeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.CreatePromoCodeRequest.token"));
        } else
          goto handle_unusual;
        continue;
      // string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.CreatePromoCodeRequest.title"));
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.CreatePromoCodeRequest.description"));
        } else
          goto handle_unusual;
        continue;
      // double discount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          discount_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string code = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.CreatePromoCodeRequest.code"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreatePromoCodeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:promo.CreatePromoCodeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.CreatePromoCodeRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.CreatePromoCodeRequest.title");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_title(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.CreatePromoCodeRequest.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // double discount = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_discount = this->_internal_discount();
  uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(4, this->_internal_discount(), target);
  }

  // string code = 5;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.CreatePromoCodeRequest.code");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:promo.CreatePromoCodeRequest)
  return target;
}

size_t CreatePromoCodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:promo.CreatePromoCodeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string code = 5;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // double discount = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_discount = this->_internal_discount();
  uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatePromoCodeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreatePromoCodeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatePromoCodeRequest::GetClassData() const { return &_class_data_; }

void CreatePromoCodeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreatePromoCodeRequest *>(to)->MergeFrom(
      static_cast<const CreatePromoCodeRequest &>(from));
}


void CreatePromoCodeRequest::MergeFrom(const CreatePromoCodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:promo.CreatePromoCodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _internal_set_token(from._internal_token());
  }
  if (!from._internal_title().empty()) {
    _internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_code().empty()) {
    _internal_set_code(from._internal_code());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_discount = from._internal_discount();
  uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    _internal_set_discount(from._internal_discount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreatePromoCodeRequest::CopyFrom(const CreatePromoCodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:promo.CreatePromoCodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePromoCodeRequest::IsInitialized() const {
  return true;
}

void CreatePromoCodeRequest::InternalSwap(CreatePromoCodeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &token_, lhs_arena,
      &other->token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &title_, lhs_arena,
      &other->title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &code_, lhs_arena,
      &other->code_, rhs_arena
  );
  swap(discount_, other->discount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePromoCodeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_promo_2eproto_getter, &descriptor_table_promo_2eproto_once,
      file_level_metadata_promo_2eproto[1]);
}

// ===================================================================

class UpdatePromoCodeRequest::_Internal {
 public:
};

UpdatePromoCodeRequest::UpdatePromoCodeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:promo.UpdatePromoCodeRequest)
}
UpdatePromoCodeRequest::UpdatePromoCodeRequest(const UpdatePromoCodeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(from._internal_token(), 
      GetArenaForAllocation());
  }
  title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    title_.Set(from._internal_title(), 
      GetArenaForAllocation());
  }
  description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(from._internal_description(), 
      GetArenaForAllocation());
  }
  code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    code_.Set(from._internal_code(), 
      GetArenaForAllocation());
  }
  ::memcpy(&promo_id_, &from.promo_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&discount_) -
    reinterpret_cast<char*>(&promo_id_)) + sizeof(discount_));
  // @@protoc_insertion_point(copy_constructor:promo.UpdatePromoCodeRequest)
}

inline void UpdatePromoCodeRequest::SharedCtor() {
token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
title_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  title_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
description_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
code_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  code_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&promo_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&discount_) -
    reinterpret_cast<char*>(&promo_id_)) + sizeof(discount_));
}

UpdatePromoCodeRequest::~UpdatePromoCodeRequest() {
  // @@protoc_insertion_point(destructor:promo.UpdatePromoCodeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdatePromoCodeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_.Destroy();
  title_.Destroy();
  description_.Destroy();
  code_.Destroy();
}

void UpdatePromoCodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdatePromoCodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:promo.UpdatePromoCodeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty();
  title_.ClearToEmpty();
  description_.ClearToEmpty();
  code_.ClearToEmpty();
  ::memset(&promo_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&discount_) -
      reinterpret_cast<char*>(&promo_id_)) + sizeof(discount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdatePromoCodeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.UpdatePromoCodeRequest.token"));
        } else
          goto handle_unusual;
        continue;
      // int64 promo_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          promo_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string title = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.UpdatePromoCodeRequest.title"));
        } else
          goto handle_unusual;
        continue;
      // string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.UpdatePromoCodeRequest.description"));
        } else
          goto handle_unusual;
        continue;
      // double discount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          discount_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // string code = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.UpdatePromoCodeRequest.code"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdatePromoCodeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:promo.UpdatePromoCodeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.UpdatePromoCodeRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // int64 promo_id = 2;
  if (this->_internal_promo_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_promo_id(), target);
  }

  // string title = 3;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.UpdatePromoCodeRequest.title");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_title(), target);
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.UpdatePromoCodeRequest.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // double discount = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_discount = this->_internal_discount();
  uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(5, this->_internal_discount(), target);
  }

  // string code = 6;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.UpdatePromoCodeRequest.code");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:promo.UpdatePromoCodeRequest)
  return target;
}

size_t UpdatePromoCodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:promo.UpdatePromoCodeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string title = 3;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string code = 6;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // int64 promo_id = 2;
  if (this->_internal_promo_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_promo_id());
  }

  // double discount = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_discount = this->_internal_discount();
  uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdatePromoCodeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdatePromoCodeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdatePromoCodeRequest::GetClassData() const { return &_class_data_; }

void UpdatePromoCodeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdatePromoCodeRequest *>(to)->MergeFrom(
      static_cast<const UpdatePromoCodeRequest &>(from));
}


void UpdatePromoCodeRequest::MergeFrom(const UpdatePromoCodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:promo.UpdatePromoCodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _internal_set_token(from._internal_token());
  }
  if (!from._internal_title().empty()) {
    _internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (!from._internal_code().empty()) {
    _internal_set_code(from._internal_code());
  }
  if (from._internal_promo_id() != 0) {
    _internal_set_promo_id(from._internal_promo_id());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_discount = from._internal_discount();
  uint64_t raw_discount;
  memcpy(&raw_discount, &tmp_discount, sizeof(tmp_discount));
  if (raw_discount != 0) {
    _internal_set_discount(from._internal_discount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdatePromoCodeRequest::CopyFrom(const UpdatePromoCodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:promo.UpdatePromoCodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePromoCodeRequest::IsInitialized() const {
  return true;
}

void UpdatePromoCodeRequest::InternalSwap(UpdatePromoCodeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &token_, lhs_arena,
      &other->token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &title_, lhs_arena,
      &other->title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &code_, lhs_arena,
      &other->code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdatePromoCodeRequest, discount_)
      + sizeof(UpdatePromoCodeRequest::discount_)
      - PROTOBUF_FIELD_OFFSET(UpdatePromoCodeRequest, promo_id_)>(
          reinterpret_cast<char*>(&promo_id_),
          reinterpret_cast<char*>(&other->promo_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdatePromoCodeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_promo_2eproto_getter, &descriptor_table_promo_2eproto_once,
      file_level_metadata_promo_2eproto[2]);
}

// ===================================================================

class DeletePromoCodeRequest::_Internal {
 public:
};

DeletePromoCodeRequest::DeletePromoCodeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:promo.DeletePromoCodeRequest)
}
DeletePromoCodeRequest::DeletePromoCodeRequest(const DeletePromoCodeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(from._internal_token(), 
      GetArenaForAllocation());
  }
  promo_id_ = from.promo_id_;
  // @@protoc_insertion_point(copy_constructor:promo.DeletePromoCodeRequest)
}

inline void DeletePromoCodeRequest::SharedCtor() {
token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
promo_id_ = int64_t{0};
}

DeletePromoCodeRequest::~DeletePromoCodeRequest() {
  // @@protoc_insertion_point(destructor:promo.DeletePromoCodeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeletePromoCodeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_.Destroy();
}

void DeletePromoCodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeletePromoCodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:promo.DeletePromoCodeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty();
  promo_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeletePromoCodeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.DeletePromoCodeRequest.token"));
        } else
          goto handle_unusual;
        continue;
      // int64 promo_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          promo_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeletePromoCodeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:promo.DeletePromoCodeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.DeletePromoCodeRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // int64 promo_id = 2;
  if (this->_internal_promo_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_promo_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:promo.DeletePromoCodeRequest)
  return target;
}

size_t DeletePromoCodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:promo.DeletePromoCodeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // int64 promo_id = 2;
  if (this->_internal_promo_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_promo_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeletePromoCodeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DeletePromoCodeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeletePromoCodeRequest::GetClassData() const { return &_class_data_; }

void DeletePromoCodeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DeletePromoCodeRequest *>(to)->MergeFrom(
      static_cast<const DeletePromoCodeRequest &>(from));
}


void DeletePromoCodeRequest::MergeFrom(const DeletePromoCodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:promo.DeletePromoCodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _internal_set_token(from._internal_token());
  }
  if (from._internal_promo_id() != 0) {
    _internal_set_promo_id(from._internal_promo_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeletePromoCodeRequest::CopyFrom(const DeletePromoCodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:promo.DeletePromoCodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeletePromoCodeRequest::IsInitialized() const {
  return true;
}

void DeletePromoCodeRequest::InternalSwap(DeletePromoCodeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &token_, lhs_arena,
      &other->token_, rhs_arena
  );
  swap(promo_id_, other->promo_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeletePromoCodeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_promo_2eproto_getter, &descriptor_table_promo_2eproto_once,
      file_level_metadata_promo_2eproto[3]);
}

// ===================================================================

class GetPromoCodeRequest::_Internal {
 public:
};

GetPromoCodeRequest::GetPromoCodeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:promo.GetPromoCodeRequest)
}
GetPromoCodeRequest::GetPromoCodeRequest(const GetPromoCodeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(from._internal_token(), 
      GetArenaForAllocation());
  }
  promo_id_ = from.promo_id_;
  // @@protoc_insertion_point(copy_constructor:promo.GetPromoCodeRequest)
}

inline void GetPromoCodeRequest::SharedCtor() {
token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
promo_id_ = int64_t{0};
}

GetPromoCodeRequest::~GetPromoCodeRequest() {
  // @@protoc_insertion_point(destructor:promo.GetPromoCodeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPromoCodeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_.Destroy();
}

void GetPromoCodeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetPromoCodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:promo.GetPromoCodeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty();
  promo_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPromoCodeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.GetPromoCodeRequest.token"));
        } else
          goto handle_unusual;
        continue;
      // int64 promo_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          promo_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPromoCodeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:promo.GetPromoCodeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.GetPromoCodeRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // int64 promo_id = 2;
  if (this->_internal_promo_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_promo_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:promo.GetPromoCodeRequest)
  return target;
}

size_t GetPromoCodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:promo.GetPromoCodeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // int64 promo_id = 2;
  if (this->_internal_promo_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_promo_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPromoCodeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetPromoCodeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPromoCodeRequest::GetClassData() const { return &_class_data_; }

void GetPromoCodeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetPromoCodeRequest *>(to)->MergeFrom(
      static_cast<const GetPromoCodeRequest &>(from));
}


void GetPromoCodeRequest::MergeFrom(const GetPromoCodeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:promo.GetPromoCodeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _internal_set_token(from._internal_token());
  }
  if (from._internal_promo_id() != 0) {
    _internal_set_promo_id(from._internal_promo_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPromoCodeRequest::CopyFrom(const GetPromoCodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:promo.GetPromoCodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPromoCodeRequest::IsInitialized() const {
  return true;
}

void GetPromoCodeRequest::InternalSwap(GetPromoCodeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &token_, lhs_arena,
      &other->token_, rhs_arena
  );
  swap(promo_id_, other->promo_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPromoCodeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_promo_2eproto_getter, &descriptor_table_promo_2eproto_once,
      file_level_metadata_promo_2eproto[4]);
}

// ===================================================================

class ListPromoCodesRequest::_Internal {
 public:
};

ListPromoCodesRequest::ListPromoCodesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:promo.ListPromoCodesRequest)
}
ListPromoCodesRequest::ListPromoCodesRequest(const ListPromoCodesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(from._internal_token(), 
      GetArenaForAllocation());
  }
  ::memcpy(&page_, &from.page_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&page_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:promo.ListPromoCodesRequest)
}

inline void ListPromoCodesRequest::SharedCtor() {
token_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&page_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&page_)) + sizeof(page_size_));
}

ListPromoCodesRequest::~ListPromoCodesRequest() {
  // @@protoc_insertion_point(destructor:promo.ListPromoCodesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListPromoCodesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_.Destroy();
}

void ListPromoCodesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListPromoCodesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:promo.ListPromoCodesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty();
  ::memset(&page_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&page_)) + sizeof(page_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListPromoCodesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "promo.ListPromoCodesRequest.token"));
        } else
          goto handle_unusual;
        continue;
      // int32 page = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          page_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListPromoCodesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:promo.ListPromoCodesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "promo.ListPromoCodesRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // int32 page = 2;
  if (this->_internal_page() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_page(), target);
  }

  // int32 page_size = 3;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_page_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:promo.ListPromoCodesRequest)
  return target;
}

size_t ListPromoCodesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:promo.ListPromoCodesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // int32 page = 2;
  if (this->_internal_page() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page());
  }

  // int32 page_size = 3;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPromoCodesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListPromoCodesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPromoCodesRequest::GetClassData() const { return &_class_data_; }

void ListPromoCodesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListPromoCodesRequest *>(to)->MergeFrom(
      static_cast<const ListPromoCodesRequest &>(from));
}


void ListPromoCodesRequest::MergeFrom(const ListPromoCodesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:promo.ListPromoCodesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _internal_set_token(from._internal_token());
  }
  if (from._internal_page() != 0) {
    _internal_set_page(from._internal_page());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListPromoCodesRequest::CopyFrom(const ListPromoCodesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:promo.ListPromoCodesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPromoCodesRequest::IsInitialized() const {
  return true;
}

void ListPromoCodesRequest::InternalSwap(ListPromoCodesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &token_, lhs_arena,
      &other->token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListPromoCodesRequest, page_size_)
      + sizeof(ListPromoCodesRequest::page_size_)
      - PROTOBUF_FIELD_OFFSET(ListPromoCodesRequest, page_)>(
          reinterpret_cast<char*>(&page_),
          reinterpret_cast<char*>(&other->page_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListPromoCodesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_promo_2eproto_getter, &descriptor_table_promo_2eproto_once,
      file_level_metadata_promo_2eproto[5]);
}

// ===================================================================

class ListPromoCodesResponse::_Internal {
 public:
};

ListPromoCodesResponse::ListPromoCodesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  promo_codes_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:promo.ListPromoCodesResponse)
}
ListPromoCodesResponse::ListPromoCodesResponse(const ListPromoCodesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      promo_codes_(from.promo_codes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&total_count_, &from.total_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&total_count_)) + sizeof(page_size_));
  // @@protoc_insertion_point(copy_constructor:promo.ListPromoCodesResponse)
}

inline void ListPromoCodesResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&total_count_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&total_count_)) + sizeof(page_size_));
}

ListPromoCodesResponse::~ListPromoCodesResponse() {
  // @@protoc_insertion_point(destructor:promo.ListPromoCodesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListPromoCodesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListPromoCodesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListPromoCodesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:promo.ListPromoCodesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  promo_codes_.Clear();
  ::memset(&total_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) -
      reinterpret_cast<char*>(&total_count_)) + sizeof(page_size_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListPromoCodesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .promo.PromoCode promo_codes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_promo_codes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int32 total_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          total_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          page_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListPromoCodesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:promo.ListPromoCodesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .promo.PromoCode promo_codes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_promo_codes_size()); i < n; i++) {
    const auto& repfield = this->_internal_promo_codes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 total_count = 2;
  if (this->_internal_total_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_total_count(), target);
  }

  // int32 page = 3;
  if (this->_internal_page() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_page(), target);
  }

  // int32 page_size = 4;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_page_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:promo.ListPromoCodesResponse)
  return target;
}

size_t ListPromoCodesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:promo.ListPromoCodesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .promo.PromoCode promo_codes = 1;
  total_size += 1UL * this->_internal_promo_codes_size();
  for (const auto& msg : this->promo_codes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 total_count = 2;
  if (this->_internal_total_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_count());
  }

  // int32 page = 3;
  if (this->_internal_page() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page());
  }

  // int32 page_size = 4;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListPromoCodesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListPromoCodesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListPromoCodesResponse::GetClassData() const { return &_class_data_; }

void ListPromoCodesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListPromoCodesResponse *>(to)->MergeFrom(
      static_cast<const ListPromoCodesResponse &>(from));
}


void ListPromoCodesResponse::MergeFrom(const ListPromoCodesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:promo.ListPromoCodesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  promo_codes_.MergeFrom(from.promo_codes_);
  if (from._internal_total_count() != 0) {
    _internal_set_total_count(from._internal_total_count());
  }
  if (from._internal_page() != 0) {
    _internal_set_page(from._internal_page());
  }
  if (from._internal_page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListPromoCodesResponse::CopyFrom(const ListPromoCodesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:promo.ListPromoCodesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPromoCodesResponse::IsInitialized() const {
  return true;
}

void ListPromoCodesResponse::InternalSwap(ListPromoCodesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  promo_codes_.InternalSwap(&other->promo_codes_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListPromoCodesResponse, page_size_)
      + sizeof(ListPromoCodesResponse::page_size_)
      - PROTOBUF_FIELD_OFFSET(ListPromoCodesResponse, total_count_)>(
          reinterpret_cast<char*>(&total_count_),
          reinterpret_cast<char*>(&other->total_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListPromoCodesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_promo_2eproto_getter, &descriptor_table_promo_2eproto_once,
      file_level_metadata_promo_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace promo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::promo::PromoCode*
Arena::CreateMaybeMessage< ::promo::PromoCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::promo::PromoCode >(arena);
}
template<> PROTOBUF_NOINLINE ::promo::CreatePromoCodeRequest*
Arena::CreateMaybeMessage< ::promo::CreatePromoCodeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::promo::CreatePromoCodeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::promo::UpdatePromoCodeRequest*
Arena::CreateMaybeMessage< ::promo::UpdatePromoCodeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::promo::UpdatePromoCodeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::promo::DeletePromoCodeRequest*
Arena::CreateMaybeMessage< ::promo::DeletePromoCodeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::promo::DeletePromoCodeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::promo::GetPromoCodeRequest*
Arena::CreateMaybeMessage< ::promo::GetPromoCodeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::promo::GetPromoCodeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::promo::ListPromoCodesRequest*
Arena::CreateMaybeMessage< ::promo::ListPromoCodesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::promo::ListPromoCodesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::promo::ListPromoCodesResponse*
Arena::CreateMaybeMessage< ::promo::ListPromoCodesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::promo::ListPromoCodesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
